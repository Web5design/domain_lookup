<?php
// $Id$


/**
 * Implementation of hook_perm()
 */
function whois_perm() {
  return array('access whois');
}

/**
 * Implementation of hook_theme()
 */
function whois_theme() {
  return array(
    'whois_domain_status' => array(
      'template' => 'whois_domain_status',
      'arguments' => array('address' => NULL,       // The address that was looked up
                            'registered' => NULL,   // Boolean, weather the domain is already registered
                            'result_data' => NULL), // Full result data, optionally used in template to further customise the output
    ),
  );
}

/**
 * Implementation of hook_menu()
 */
function whois_menu() {
  $items = array();

  $items['whois'] = array(
    'title' => t('Whois lookup'),
    'page callback' => 'whois_whois_page',
    'access arguments' => array('access whois'),
    'file' => 'whois.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/settings/whois'] = array(
    'title' => t('Whois lookup'),
    'description' => t('Configure Whois lookup output style, dynamic(AJAX) results, hourly threshold, and more.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('whois_settings'),
    'file' => 'whois.admin.inc',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implementation of hook_block().
 */
function whois_block($op = 'list', $delta = 0) {

  // listing of blocks, such as on the admin/block page
  if ($op == "list") {
    $block[0]["info"] = t('Whois mini form');
    return $block;
  } 
  elseif ($op == 'view') {

    switch ($delta) {
      case 0:
        $block['subject'] = 'Whois';
        $block_content = drupal_get_form('whois_whois_mini_form'); 
        break;
      }
    $block['content'] = $block_content;
    return $block;
  }
} // end whois_block


function whois_display_whois($address) {
  $data = '';
  $result = whois_get_whois($address);
  if ($result) {
    switch (variable_get('whois_output_method', 'html')) {
      case 'html':
        $data .= '<h3>' . t('Whois lookup for %address:', array('%address' => $address)) . '</h3>';
        if (!empty($result['rawdata'])) {
          $utils = new utils;
          $data .= $utils->showHTML($result);
        }
        else {
          $data .= implode($whois->Query['errstr'], "\n<br />");
        }  
        break;

      case 'html_status':
        if (!empty($result['rawdata'])) {
          $data .= theme('whois_domain_status', $address, $result['regrinfo']['registered'] != 'no', $result);
        }
        else {
          $data .= implode($whois->Query['errstr'], "\n<br />");
        }  
      break;

      case 'object':
        $data .= '<h3>' . t('Whois lookup for %address:', array('%address' => $address)) . '</h3>';
        if ($whois->Query['status'] < 0) {
          $data .= implode($whois->Query['errstr'], "\n<br />");
        }
        else {
          $utils = new utils;
          $data .= $utils->showObject($result);
        }
      break;

      case 'basic': // 'basic' is the default 
      default:
        $data .= '<h3>' . t('Whois lookup for %address:', array('%address' => $address)) . '</h3>';
        if (!empty($result['rawdata'])) {
          $data .= '<pre>' . implode($result['rawdata'], "\n") . '</pre>';
        }
        else {
          $data .= implode($whois->Query['errstr'], "\n<br />");
        } 
      break;
    }
  }

  return $data;
}

/**
 * Return the whois information for a given host.
 *
 * @param $address
 *   The address of the host to look up.
 *
 * @return
 *   An object describing the Whois result.
 */
function whois_get_whois($address) {
  $data = '';
  $mod_path = drupal_get_path('module', 'whois');

  if (!file_exists($mod_path . '/phpwhois/whois.main.php')) {
    drupal_set_message(t('There are problems with <em>Whois lookup</em> setup. Report to the website administrators promptly!', array('@status' => url('admin/logs/status'))), 'error');
  }
  elseif ($address != '') {
    include_once($mod_path . '/phpwhois/whois.main.php');
    include_once($mod_path . '/phpwhois/whois.utils.php');
    $whois = new Whois();
    if (variable_get('whois_log_watchdog', 1)) {
      // Watchdog entry for lookup request.
      watchdog('whois',
        t('Whois lookup for: %address', array('%address' => $address)),
        array($address), WATCHDOG_NOTICE, l('View', "whois/$address") . ' Â· ' . l('Address', "http://$address/"));
    }
    return $whois->Lookup($address);
  }
  return FALSE;
}

/**
 * Parse the user input to extract an IP or domainname.
 * Elements like http:// are removed
 *
 * @param $url
 *   The user input
 * 
 * @return 
 *   The cleaned up domain or IP to look up
 */
function whois_parse_url($url) {
  include_once('phpwhois/whois.ip.lib.php');
  if (validip($url)) {
    return $url;
  }
  else {
    $r  = "^(?:(?P<scheme>\w+)://)?";
    $r .= "(?:(?P<login>\w+):(?P<pass>\w+)@)?";
    $r .= "(?P<host>(?:(?P<subdomain>[\w\.]+)\.)?" . "(?P<domain>\w+\.(?P<extension>\w+)))";
    $r .= "(?::(?P<port>\d+))?";
    $r .= "(?P<path>[\w/]*/(?P<file>\w+(?:\.\w+)?)?)?";
    $r .= "(?:\?(?P<arg>[\w=&]+))?";
    $r .= "(?:#(?P<anchor>\w+))?";
    $r = "!$r!";                                                // Delimiters

    $result = array();
    preg_match($r, $url, $result);

    return $result[6];
  }
}

